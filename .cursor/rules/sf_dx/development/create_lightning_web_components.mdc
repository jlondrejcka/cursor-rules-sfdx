---
description: How to create Lightning Web Components (LWC) using Salesforce CLI
globs: 
alwaysApply: false
---
 ---
description: How to create Lightning Web Components (LWC) using Salesforce CLI
globs: 
alwaysApply: false
---
# Create Lightning Web Components

## Overview
This rule covers how to create and develop Lightning Web Components (LWC) using Salesforce CLI commands and modern web standards.

## Key Concepts
- Lightning Web Components framework
- Component-based architecture
- Web standards and modern JavaScript

## Detailed Sections
### Creating LWC Components
- Structure of an LWC component
- Using CLI to generate LWC scaffolding
- Component bundle files

### LWC Development
- JavaScript controller
- HTML templates
- CSS styling
- XML configuration
- Jest testing

## Code Examples
```bash
# Create a Lightning Web Component
sf lightning generate component --type lwc --component-name myComponent --output-dir force-app/main/default/lwc

# Create an LWC with specific files
sf lightning generate component --type lwc --component-name myComponent --output-dir force-app/main/default/lwc --template analytics

# Deploy LWC to an org
sf project deploy start --source-dir force-app/main/default/lwc/myComponent
```

## Best Practices
1. Use kebab-case for HTML attributes and camelCase for JavaScript properties
2. Follow component encapsulation principles
3. Use @api decorators for public properties
4. Create reusable, single-responsibility components
5. Write Jest tests for components
6. Use CSS custom properties for consistent styling

## Further Reading
- [Lightning Web Components Developer Guide](https://developer.salesforce.com/docs/component-library/documentation/lwc)
- [Lightning Web Components Recipes](https://github.com/trailheadapps/lwc-recipes)
- [Lightning Web Components Open Source](https://lwc.dev/)