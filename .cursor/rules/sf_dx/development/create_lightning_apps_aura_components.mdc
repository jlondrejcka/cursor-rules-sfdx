---
description: How to create Lightning apps and Aura components using Salesforce CLI
globs: 
alwaysApply: false
---
 ---
description: How to create Lightning apps and Aura components using Salesforce CLI
globs: 
alwaysApply: false
---
# Create Lightning Apps and Aura Components

## Overview
This rule covers how to create and deploy Lightning applications and Aura components using Salesforce CLI commands.

## Key Concepts
- Lightning application architecture
- Aura component development
- Using templates to create Lightning components

## Detailed Sections
### Creating Lightning Apps
- Structure of a Lightning application
- Using CLI to generate Lightning app scaffolding
- Customizing Lightning apps

### Creating Aura Components
- Structure of Aura components
- Creating controller and helper files
- Component bundles and organization

## Code Examples
```bash
# Create a Lightning app
sf lightning generate app --app-name MyLightningApp --output-dir force-app/main/default/aura

# Create an Aura component
sf lightning generate component --component-name MyAuraComponent --output-dir force-app/main/default/aura

# Create an Aura component with all supporting files
sf lightning generate component --component-name MyAuraComponent --type aura --output-dir force-app/main/default/aura
```

## Best Practices
1. Follow component naming conventions for clarity and organization
2. Use descriptive names for controller methods
3. Separate concerns between components, controllers, and helpers
4. Use design attributes to make components configurable
5. Test Lightning components with Lightning Testing Service

## Further Reading
- [Lightning Aura Components Developer Guide](https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/intro_framework.htm)
- [Salesforce CLI Command Reference: Lightning](https://developer.salesforce.com/docs/atlas.en-us.sfdx_cli_reference.meta/sfdx_cli_reference/cli_reference_lightning.htm)